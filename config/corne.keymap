/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        NE_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };

        TN_CAPS {
            bindings = <&kp CAPS>;
            key-positions = <16 19>;
        };

        EI_SQT {
            bindings = <&kp SQT>;
            key-positions = <20 21>;
        };

        UY_COLON {
            bindings = <&kp COLON>;
            key-positions = <8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W           &kp F               &kp P             &kp B          &kp J        &kp L              &kp U            &kp Y              &kp SEMICOLON        &none
&none  &kp A           &kp R           &kp S               &kp T             &kp G          &kp M        &kp N              &kp E            &kp I              &kp O                &none
&none  &mt LEFT_GUI Z  &mt LEFT_ALT X  &mt LEFT_CONTROL C  &mt LEFT_SHIFT D  &kp V          &kp K        &mt RIGHT_SHIFT H  &mt RCTRL COMMA  &mt RIGHT_ALT DOT  &mt RIGHT_GUI SLASH  &none
                                       &kp ESC             &lt 3 TAB         &lt 1 SPACE    &lt 2 ENTER  &lt 3 BACKSPACE    &kp DELETE
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N1            &kp N2        &kp N3        &kp N4        &kp N5        &kp N6     &kp N7        &kp N8        &kp N9        &kp N0     &none
&none  &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR    &kp DOT    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SQT    &trans
&none  &kp C_PLAY_PAUSE  &kp K_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE    &kp COMMA  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS  &trans
                                       &trans        &trans        &trans        &trans     &trans        &kp EQUAL
            >;
        };

        sym_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL   &kp AT     &kp HASH              &kp DLLR        &kp PRCNT           &kp CARET          &kp AMPS         &kp ASTRK       &kp LPAR   &kp RPAR           &none
&none  &kp GRAVE  &kp TILDE  &kp LS(LA(NUMBER_2))  &kp LEFT_BRACE  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp MINUS       &kp EQUAL  &kp DOUBLE_QUOTES  &none
&none  &trans     &trans     &trans                &trans          &kp LESS_THAN       &kp GREATER_THAN   &kp PIPE         &kp UNDERSCORE  &kp PLUS   &kp BACKSLASH      &none
                             &trans                &trans          &trans              &trans             &trans           &trans
            >;
        };

        nav_layer {
            bindings = <
&trans  &kp LS(LG(N5))  &trans        &trans            &trans          &trans       &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &trans
&trans  &kp LA(GRAVE)   &kp LA(C)     &kp LA(E)         &kp LA(N)       &kp LA(I)    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&trans  &kp LEFT_GUI    &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans       &trans    &kp LC(D)      &kp LC(U)    &trans     &trans  &trans
                                      &trans            &trans          &trans       &trans    &trans         &trans
            >;
        };
    };
};
